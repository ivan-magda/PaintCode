//
//  GalaxyNote4.swift
//  Blagaprint
//
//  Created by Ivan Magda on 30.10.15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

class GalaxyNote4 : NSObject {

    //// Cache

    struct Cache {
        static var innerShadow: NSShadow = NSShadow(color: UIColor.darkGrayColor(), offset: CGSizeMake(1.1, -2.1), blurRadius: 4)
        static var outerShadow: NSShadow = NSShadow(color: UIColor.darkGrayColor().colorWithAlphaComponent(0.7), offset: CGSizeMake(-6.1, 8.1), blurRadius: 15)
    }

    //// Initialization

    override class func load() {
    }

    //// Shadows

    class var innerShadow: NSShadow { return Cache.innerShadow }
    class var outerShadow: NSShadow { return Cache.outerShadow }

    //// Drawing Methods

    class func drawNote4(frame: CGRect, colorOfText: UIColor, fillColor: UIColor, image: UIImage, caseText: String, textYscale: CGFloat, backgroundImageVisible: Bool, textXscale: CGFloat, textSize: CGFloat, textRectHeight: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let strokeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.104)

        //// Shadow Declarations
        let cameraOuterShadow = NSShadow(color: UIColor.grayColor(), offset: CGSizeMake(0.1, 2.1), blurRadius: 3)
        let cameraInnerShadow = NSShadow(color: UIColor.grayColor(), offset: CGSizeMake(0.1, -0.1), blurRadius: 10)

        //// Image Declarations
        let galaxyNote4Speaker = UIImage(contentsOfFile: "galaxyNote4Speaker.png")
        let galaxyNote4CameraImage = UIImage(contentsOfFile: "galaxyNote4CameraImage.png")

        //// Rectangle Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, frame.minX + 105.01, frame.minY + 199.64)

        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(-78.68, -164.84))
        rectanglePath.addCurveToPoint(CGPointMake(-89.39, -132.43), controlPoint1: CGPointMake(-91.43, -148.58), controlPoint2: CGPointMake(-89.39, -132.43))
        rectanglePath.addLineToPoint(CGPointMake(-89.39, 171.6))
        rectanglePath.addCurveToPoint(CGPointMake(-78.68, 210.72), controlPoint1: CGPointMake(-89.39, 171.6), controlPoint2: CGPointMake(-88.48, 197.37))
        rectanglePath.addCurveToPoint(CGPointMake(-49.76, 218.55), controlPoint1: CGPointMake(-71.77, 220.14), controlPoint2: CGPointMake(-57.14, 218.55))
        rectanglePath.addCurveToPoint(CGPointMake(77.61, 218.55), controlPoint1: CGPointMake(-38.86, 218.55), controlPoint2: CGPointMake(50.54, 218.55))
        rectanglePath.addCurveToPoint(CGPointMake(108.78, 210.72), controlPoint1: CGPointMake(85.85, 218.55), controlPoint2: CGPointMake(100.52, 221.26))
        rectanglePath.addCurveToPoint(CGPointMake(120.46, 171.04), controlPoint1: CGPointMake(118.42, 198.43), controlPoint2: CGPointMake(120.46, 171.04))
        rectanglePath.addCurveToPoint(CGPointMake(120.46, -132.43), controlPoint1: CGPointMake(120.46, 171.04), controlPoint2: CGPointMake(120.46, -119.57))
        rectanglePath.addCurveToPoint(CGPointMake(108.78, -164.84), controlPoint1: CGPointMake(120.46, -133.56), controlPoint2: CGPointMake(121.63, -148.08))
        rectanglePath.addCurveToPoint(CGPointMake(77.61, -177.14), controlPoint1: CGPointMake(99.72, -176.65), controlPoint2: CGPointMake(84.99, -177.14))
        rectanglePath.addCurveToPoint(CGPointMake(-49.76, -177.14), controlPoint1: CGPointMake(64.84, -177.14), controlPoint2: CGPointMake(-45.29, -177.14))
        rectanglePath.addCurveToPoint(CGPointMake(-78.68, -164.84), controlPoint1: CGPointMake(-57.44, -177.14), controlPoint2: CGPointMake(-69.04, -177.14))
        rectanglePath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, GalaxyNote4.outerShadow.shadowOffset, GalaxyNote4.outerShadow.shadowBlurRadius, GalaxyNote4.outerShadow.shadowColor.CGColor)
        fillColor.setFill()
        rectanglePath.fill()

        ////// Rectangle Inner Shadow
        CGContextSaveGState(context)
        CGContextClipToRect(context, rectanglePath.bounds)
        CGContextSetShadow(context, CGSizeMake(0, 0), 0)
        CGContextSetAlpha(context, CGColorGetAlpha(GalaxyNote4.innerShadow.shadowColor.CGColor))
        CGContextBeginTransparencyLayer(context, nil)
        let rectangleOpaqueShadow = GalaxyNote4.innerShadow.shadowColor.colorWithAlphaComponent(1)
        CGContextSetShadowWithColor(context, GalaxyNote4.innerShadow.shadowOffset, GalaxyNote4.innerShadow.shadowBlurRadius, rectangleOpaqueShadow.CGColor)
        CGContextSetBlendMode(context, kCGBlendModeSourceOut)
        CGContextBeginTransparencyLayer(context, nil)

        rectangleOpaqueShadow.setFill()
        rectanglePath.fill()

        CGContextEndTransparencyLayer(context)
        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)

        strokeColor.setStroke()
        rectanglePath.lineWidth = 1
        rectanglePath.stroke()

        CGContextRestoreGState(context)


        if (backgroundImageVisible) {
            //// Background Image Rectangle Drawing
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, frame.minX + 105.01, frame.minY + 199.64)

            let backgroundImageRectangleRect: CGRect = CGRectMake(-89.51, -177.14, 210, 396)
            var backgroundImageRectanglePath = UIBezierPath()
            backgroundImageRectanglePath.moveToPoint(CGPointMake(-78.68, -164.84))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(-89.39, -132.43), controlPoint1: CGPointMake(-91.43, -148.58), controlPoint2: CGPointMake(-89.39, -132.43))
            backgroundImageRectanglePath.addLineToPoint(CGPointMake(-89.39, 171.6))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(-78.68, 210.72), controlPoint1: CGPointMake(-89.39, 171.6), controlPoint2: CGPointMake(-88.48, 197.37))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(-49.76, 218.55), controlPoint1: CGPointMake(-71.77, 220.14), controlPoint2: CGPointMake(-57.14, 218.55))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(77.61, 218.55), controlPoint1: CGPointMake(-38.86, 218.55), controlPoint2: CGPointMake(50.54, 218.55))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(108.78, 210.72), controlPoint1: CGPointMake(85.85, 218.55), controlPoint2: CGPointMake(100.52, 221.26))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(120.46, 171.04), controlPoint1: CGPointMake(118.42, 198.43), controlPoint2: CGPointMake(120.46, 171.04))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(120.46, -132.43), controlPoint1: CGPointMake(120.46, 171.04), controlPoint2: CGPointMake(120.46, -119.57))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(108.78, -164.84), controlPoint1: CGPointMake(120.46, -133.56), controlPoint2: CGPointMake(121.63, -148.08))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(77.61, -177.14), controlPoint1: CGPointMake(99.72, -176.65), controlPoint2: CGPointMake(84.99, -177.14))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(-49.76, -177.14), controlPoint1: CGPointMake(64.84, -177.14), controlPoint2: CGPointMake(-45.29, -177.14))
            backgroundImageRectanglePath.addCurveToPoint(CGPointMake(-78.68, -164.84), controlPoint1: CGPointMake(-57.44, -177.14), controlPoint2: CGPointMake(-69.04, -177.14))
            backgroundImageRectanglePath.closePath()
            CGContextSaveGState(context)
            CGContextSetShadowWithColor(context, GalaxyNote4.outerShadow.shadowOffset, GalaxyNote4.outerShadow.shadowBlurRadius, GalaxyNote4.outerShadow.shadowColor.CGColor)
            CGContextBeginTransparencyLayer(context, nil)
            CGContextSaveGState(context)
            backgroundImageRectanglePath.addClip()
            image.drawInRect(CGRectMake(floor(backgroundImageRectangleRect.minX + 0.5), floor(backgroundImageRectangleRect.minY + 0.5), image.size.width, image.size.height))
            CGContextRestoreGState(context)
            CGContextEndTransparencyLayer(context)

            ////// Background Image Rectangle Inner Shadow
            CGContextSaveGState(context)
            CGContextClipToRect(context, backgroundImageRectanglePath.bounds)
            CGContextSetShadow(context, CGSizeMake(0, 0), 0)
            CGContextSetAlpha(context, CGColorGetAlpha(GalaxyNote4.innerShadow.shadowColor.CGColor))
            CGContextBeginTransparencyLayer(context, nil)
            let backgroundImageRectangleOpaqueShadow = GalaxyNote4.innerShadow.shadowColor.colorWithAlphaComponent(1)
            CGContextSetShadowWithColor(context, GalaxyNote4.innerShadow.shadowOffset, GalaxyNote4.innerShadow.shadowBlurRadius, backgroundImageRectangleOpaqueShadow.CGColor)
            CGContextSetBlendMode(context, kCGBlendModeSourceOut)
            CGContextBeginTransparencyLayer(context, nil)

            backgroundImageRectangleOpaqueShadow.setFill()
            backgroundImageRectanglePath.fill()

            CGContextEndTransparencyLayer(context)
            CGContextEndTransparencyLayer(context)
            CGContextRestoreGState(context)

            CGContextRestoreGState(context)

            strokeColor.setStroke()
            backgroundImageRectanglePath.lineWidth = 1
            backgroundImageRectanglePath.stroke()

            CGContextRestoreGState(context)
        }


        //// Text Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, frame.minX + 16, frame.minY + 100)
        CGContextRotateCTM(context, 90 * M_PI / 180)
        CGContextScaleCTM(context, textXscale, textYscale)

        let textRect: CGRect = CGRectMake(0, -93.33, 280, (textRectHeight + 10.0033333333))
        let textStyle = NSMutableParagraphStyle.defaultParagraphStyle().mutableCopy() as NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Left;

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "AndersonSupercar", size: textSize), NSForegroundColorAttributeName: colorOfText, NSParagraphStyleAttributeName: textStyle]

        NSString(string: caseText).drawInRect(CGRectOffset(textRect, 0, (textRect.height - NSString(string: caseText).boundingRectWithSize(textRect.size, options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height) / 2), withAttributes: textFontAttributes);

        CGContextRestoreGState(context)


        //// Speaker Drawing
        let speakerRect: CGRect = CGRectMake(frame.minX + 45, frame.minY + 358, 30, 15)
        var speakerPath = UIBezierPath()
        speakerPath.moveToPoint(CGPointMake(frame.minX + 50.2, frame.maxY - 67))
        speakerPath.addCurveToPoint(CGPointMake(frame.maxX - 170.72, frame.maxY - 67), controlPoint1: CGPointMake(frame.minX + 57.14, frame.maxY - 67), controlPoint2: CGPointMake(frame.maxX - 178.34, frame.maxY - 67))
        speakerPath.addCurveToPoint(CGPointMake(frame.maxX - 170.72, frame.minY + 358), controlPoint1: CGPointMake(frame.maxX - 163.09, frame.maxY - 67), controlPoint2: CGPointMake(frame.maxX - 163.09, frame.minY + 358))
        speakerPath.addCurveToPoint(CGPointMake(frame.minX + 50.2, frame.minY + 358), controlPoint1: CGPointMake(frame.maxX - 178.34, frame.minY + 358), controlPoint2: CGPointMake(frame.minX + 57.14, frame.minY + 358))
        speakerPath.addCurveToPoint(CGPointMake(frame.minX + 50.2, frame.maxY - 67), controlPoint1: CGPointMake(frame.minX + 43.27, frame.minY + 358), controlPoint2: CGPointMake(frame.minX + 43.27, frame.maxY - 67))
        speakerPath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, cameraOuterShadow.shadowOffset, cameraOuterShadow.shadowBlurRadius, cameraOuterShadow.shadowColor.CGColor)
        CGContextBeginTransparencyLayer(context, nil)
        CGContextSaveGState(context)
        speakerPath.addClip()
        galaxyNote4Speaker.drawInRect(CGRectMake(floor(speakerRect.minX + 0.5), floor(speakerRect.minY + 0.5), galaxyNote4Speaker.size.width, galaxyNote4Speaker.size.height))
        CGContextRestoreGState(context)
        CGContextEndTransparencyLayer(context)

        ////// Speaker Inner Shadow
        CGContextSaveGState(context)
        CGContextClipToRect(context, speakerPath.bounds)
        CGContextSetShadow(context, CGSizeMake(0, 0), 0)
        CGContextSetAlpha(context, CGColorGetAlpha(cameraInnerShadow.shadowColor.CGColor))
        CGContextBeginTransparencyLayer(context, nil)
        let speakerOpaqueShadow = cameraInnerShadow.shadowColor.colorWithAlphaComponent(1)
        CGContextSetShadowWithColor(context, cameraInnerShadow.shadowOffset, cameraInnerShadow.shadowBlurRadius, speakerOpaqueShadow.CGColor)
        CGContextSetBlendMode(context, kCGBlendModeSourceOut)
        CGContextBeginTransparencyLayer(context, nil)

        speakerOpaqueShadow.setFill()
        speakerPath.fill()

        CGContextEndTransparencyLayer(context)
        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)

        strokeColor.setStroke()
        speakerPath.lineWidth = 1.5
        speakerPath.stroke()


        //// Camera Drawing
        let cameraRect: CGRect = CGRectMake(frame.minX + 100, frame.minY + 33, 40, 60)
        var cameraPath = UIBezierPath()
        cameraPath.moveToPoint(CGPointMake(frame.minX + 140, frame.maxY - 357.02))
        cameraPath.addCurveToPoint(CGPointMake(frame.maxX - 100, frame.maxY - 395.42), controlPoint1: CGPointMake(frame.minX + 140, frame.maxY - 370.92), controlPoint2: CGPointMake(frame.maxX - 100, frame.maxY - 379.44))
        cameraPath.addCurveToPoint(CGPointMake(frame.minX + 120.05, frame.minY + 33), controlPoint1: CGPointMake(frame.maxX - 100, frame.maxY - 403.39), controlPoint2: CGPointMake(frame.minX + 130.03, frame.minY + 32.88))
        cameraPath.addCurveToPoint(CGPointMake(frame.maxX - 140, frame.minY + 44.58), controlPoint1: CGPointMake(frame.minX + 110.03, frame.minY + 33.13), controlPoint2: CGPointMake(frame.maxX - 140, frame.minY + 37.12))
        cameraPath.addCurveToPoint(CGPointMake(frame.minX + 100, frame.minY + 82.98), controlPoint1: CGPointMake(frame.maxX - 140, frame.minY + 59.48), controlPoint2: CGPointMake(frame.minX + 100, frame.minY + 70.17))
        cameraPath.addCurveToPoint(CGPointMake(frame.minX + 140, frame.maxY - 357.02), controlPoint1: CGPointMake(frame.minX + 100, frame.minY + 95.79), controlPoint2: CGPointMake(frame.minX + 140, frame.maxY - 343.12))
        cameraPath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, cameraOuterShadow.shadowOffset, cameraOuterShadow.shadowBlurRadius, cameraOuterShadow.shadowColor.CGColor)
        CGContextBeginTransparencyLayer(context, nil)
        CGContextSaveGState(context)
        cameraPath.addClip()
        CGContextScaleCTM(context, 1, -1)
        CGContextDrawTiledImage(context, CGRectMake(cameraRect.minX, -cameraRect.minY, galaxyNote4CameraImage.size.width, galaxyNote4CameraImage.size.height), galaxyNote4CameraImage.CGImage)
        CGContextRestoreGState(context)
        CGContextEndTransparencyLayer(context)

        ////// Camera Inner Shadow
        CGContextSaveGState(context)
        CGContextClipToRect(context, cameraPath.bounds)
        CGContextSetShadow(context, CGSizeMake(0, 0), 0)
        CGContextSetAlpha(context, CGColorGetAlpha(cameraInnerShadow.shadowColor.CGColor))
        CGContextBeginTransparencyLayer(context, nil)
        let cameraOpaqueShadow = cameraInnerShadow.shadowColor.colorWithAlphaComponent(1)
        CGContextSetShadowWithColor(context, cameraInnerShadow.shadowOffset, cameraInnerShadow.shadowBlurRadius, cameraOpaqueShadow.CGColor)
        CGContextSetBlendMode(context, kCGBlendModeSourceOut)
        CGContextBeginTransparencyLayer(context, nil)

        cameraOpaqueShadow.setFill()
        cameraPath.fill()

        CGContextEndTransparencyLayer(context)
        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)

        strokeColor.setStroke()
        cameraPath.lineWidth = 1.5
        cameraPath.stroke()
    }

    //// Generated Images

    class func imageOfNote4(frame: CGRect, colorOfText: UIColor, fillColor: UIColor, image: UIImage, caseText: String, textYscale: CGFloat, backgroundImageVisible: Bool, textXscale: CGFloat, textSize: CGFloat, textRectHeight: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 568), false, 0)
        GalaxyNote4.drawNote4(frame, colorOfText: colorOfText, fillColor: fillColor, image: image, caseText: caseText, textYscale: textYscale, backgroundImageVisible: backgroundImageVisible, textXscale: textXscale, textSize: textSize, textRectHeight: textRectHeight)
        var imageOfNote4 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNote4!
    }

}



extension NSShadow {
    convenience init(color: AnyObject!, offset: CGSize, blurRadius: CGFloat) {
        self.init()
        self.shadowColor = color
        self.shadowOffset = offset
        self.shadowBlurRadius = blurRadius
    }
}

@objc protocol StyleKitSettableImage {
    var image: UIImage! { get set }
}

@objc protocol StyleKitSettableSelectedImage {
    var selectedImage: UIImage! { get set }
}
