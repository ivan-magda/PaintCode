//
//  CircleKeyRing.swift
//  Blagaprint
//
//  Created by Ivan Magda on 15.01.16.
//  Copyright (c) 2016 Blagaprint. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class CircleKeyRing : NSObject {

    //// Drawing Methods

    public class func drawKeyRing(frame frame: CGRect = CGRectMake(0, 0, 320, 320), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let color = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 0.602)
        let color2 = UIColor(red: 0.916, green: 0.916, blue: 0.916, alpha: 0.800)

        //// Shadow Declarations
        let outerShadow = NSShadow()
        outerShadow.shadowColor = UIColor.lightGrayColor()
        outerShadow.shadowOffset = CGSizeMake(3.1, 3.1)
        outerShadow.shadowBlurRadius = 5

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(frame.minX + 40, frame.minY + 70, 240, 240))
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, outerShadow.shadowOffset, outerShadow.shadowBlurRadius, (outerShadow.shadowColor as! UIColor).CGColor)
        UIColor.whiteColor().setFill()
        ovalPath.fill()
        CGContextRestoreGState(context)

        UIColor.lightGrayColor().setStroke()
        ovalPath.lineWidth = 0.5
        ovalPath.stroke()


        if (imageVisible) {
            //// OvalImage Drawing
            let ovalImageRect = CGRectMake(frame.minX + 40, frame.minY + 70, 240, 240)
            let ovalImagePath = UIBezierPath(ovalInRect: ovalImageRect)
            CGContextSaveGState(context)
            CGContextSetShadowWithColor(context, outerShadow.shadowOffset, outerShadow.shadowBlurRadius, (outerShadow.shadowColor as! UIColor).CGColor)
            CGContextBeginTransparencyLayer(context, nil)
            CGContextSaveGState(context)
            ovalImagePath.addClip()
            image.drawInRect(CGRectMake(floor(ovalImageRect.minX + 0.5), floor(ovalImageRect.minY + 0.5), image.size.width, image.size.height))
            CGContextRestoreGState(context)
            CGContextEndTransparencyLayer(context)
            CGContextRestoreGState(context)

        }


        //// Hole Drawing
        let holePath = UIBezierPath(ovalInRect: CGRectMake(frame.minX + 145.25, frame.minY + 79.75, 30, 30))
        UIColor.darkGrayColor().setFill()
        holePath.fill()


        //// KeyCircle Drawing
        let keyCirclePath = UIBezierPath()
        keyCirclePath.moveToPoint(CGPointMake(frame.minX + 115, frame.minY + 8))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 97.57, frame.minY + 13.58), controlPoint1: CGPointMake(frame.minX + 108.5, frame.minY + 8), controlPoint2: CGPointMake(frame.minX + 102.48, frame.minY + 10.07))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 85, frame.minY + 38), controlPoint1: CGPointMake(frame.minX + 89.96, frame.minY + 19.02), controlPoint2: CGPointMake(frame.minX + 85, frame.minY + 27.93))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 115, frame.minY + 68), controlPoint1: CGPointMake(frame.minX + 85, frame.minY + 54.57), controlPoint2: CGPointMake(frame.minX + 98.43, frame.minY + 68))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 145, frame.minY + 38), controlPoint1: CGPointMake(frame.minX + 131.57, frame.minY + 68), controlPoint2: CGPointMake(frame.minX + 145, frame.minY + 54.57))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 115, frame.minY + 8), controlPoint1: CGPointMake(frame.minX + 145, frame.minY + 21.43), controlPoint2: CGPointMake(frame.minX + 131.57, frame.minY + 8))
        keyCirclePath.closePath()
        keyCirclePath.moveToPoint(CGPointMake(frame.minX + 150, frame.minY + 38))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 115, frame.minY + 73), controlPoint1: CGPointMake(frame.minX + 150, frame.minY + 57.33), controlPoint2: CGPointMake(frame.minX + 134.33, frame.minY + 73))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 80, frame.minY + 38), controlPoint1: CGPointMake(frame.minX + 95.67, frame.minY + 73), controlPoint2: CGPointMake(frame.minX + 80, frame.minY + 57.33))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 93.65, frame.minY + 10.27), controlPoint1: CGPointMake(frame.minX + 80, frame.minY + 26.71), controlPoint2: CGPointMake(frame.minX + 85.35, frame.minY + 16.67))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 115, frame.minY + 3), controlPoint1: CGPointMake(frame.minX + 99.56, frame.minY + 5.71), controlPoint2: CGPointMake(frame.minX + 106.96, frame.minY + 3))
        keyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 150, frame.minY + 38), controlPoint1: CGPointMake(frame.minX + 134.33, frame.minY + 3), controlPoint2: CGPointMake(frame.minX + 150, frame.minY + 18.67))
        keyCirclePath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, outerShadow.shadowOffset, outerShadow.shadowBlurRadius, (outerShadow.shadowColor as! UIColor).CGColor)
        color.setFill()
        keyCirclePath.fill()
        CGContextRestoreGState(context)

        UIColor.grayColor().setStroke()
        keyCirclePath.lineWidth = 0.5
        keyCirclePath.stroke()


        //// Brace Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, frame.minX + 110, frame.minY + 60)
        CGContextRotateCTM(context, -20 * CGFloat(M_PI) / 180)

        let bracePath = UIBezierPath()
        bracePath.moveToPoint(CGPointMake(14.51, 47.85))
        bracePath.addCurveToPoint(CGPointMake(32.77, 69.83), controlPoint1: CGPointMake(15.59, 65.51), controlPoint2: CGPointMake(20.27, 69.83))
        bracePath.addCurveToPoint(CGPointMake(55.38, 49.83), controlPoint1: CGPointMake(45.27, 69.83), controlPoint2: CGPointMake(56.15, 68.2))
        bracePath.addCurveToPoint(CGPointMake(22, 0.86), controlPoint1: CGPointMake(54.62, 31.46), controlPoint2: CGPointMake(22, 0.86))
        bracePath.addLineToPoint(CGPointMake(-0, 0))
        bracePath.addCurveToPoint(CGPointMake(14.51, 47.85), controlPoint1: CGPointMake(-0, 0), controlPoint2: CGPointMake(13.43, 30.19))
        bracePath.closePath()
        color2.setFill()
        bracePath.fill()
        UIColor.lightGrayColor().setStroke()
        bracePath.lineWidth = 0.5
        bracePath.stroke()

        CGContextRestoreGState(context)
    }

    //// Generated Images

    public class func imageOfKeyRing(frame frame: CGRect = CGRectMake(0, 0, 320, 320), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = true) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            CircleKeyRing.drawKeyRing(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), image: image, imageVisible: imageVisible)

        let imageOfKeyRing = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfKeyRing
    }

}
