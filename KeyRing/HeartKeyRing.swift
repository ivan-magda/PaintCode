//
//  HeartKeyRing.swift
//  Blagaprint
//
//  Created by Ivan Magda on 19.01.16.
//  Copyright (c) 2016 Blagaprint. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class HeartKeyRing : NSObject {

    //// Drawing Methods

    public class func drawKeyRing(frame frame: CGRect = CGRectMake(0, 0, 320, 320), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let color2 = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 0.602)
        let color3 = UIColor(red: 0.916, green: 0.916, blue: 0.916, alpha: 0.800)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.lightGrayColor()
        shadow.shadowOffset = CGSizeMake(3.1, 3.1)
        shadow.shadowBlurRadius = 5
        let outerShadow = NSShadow()
        outerShadow.shadowColor = UIColor.lightGrayColor()
        outerShadow.shadowOffset = CGSizeMake(3.1, 3.1)
        outerShadow.shadowBlurRadius = 5

        //// Oval Drawing
        let ovalPath = UIBezierPath()
        ovalPath.moveToPoint(CGPointMake(frame.minX + 226, frame.minY + 62))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 273.25, frame.minY + 91.92), controlPoint1: CGPointMake(frame.minX + 247.53, frame.minY + 61), controlPoint2: CGPointMake(frame.minX + 263.53, frame.minY + 70.6))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 276.19, frame.minY + 190.65), controlPoint1: CGPointMake(frame.minX + 290.87, frame.minY + 130.55), controlPoint2: CGPointMake(frame.minX + 286.64, frame.minY + 171.36))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 160.71, frame.minY + 310.33), controlPoint1: CGPointMake(frame.minX + 247.88, frame.minY + 242.95), controlPoint2: CGPointMake(frame.minX + 180.28, frame.minY + 310.33))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 43.28, frame.minY + 190.65), controlPoint1: CGPointMake(frame.minX + 141.14, frame.minY + 310.33), controlPoint2: CGPointMake(frame.minX + 63.79, frame.minY + 241.96))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 53.06, frame.minY + 91.92), controlPoint1: CGPointMake(frame.minX + 35.02, frame.minY + 170), controlPoint2: CGPointMake(frame.minX + 26.89, frame.minY + 134.31))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 92, frame.minY + 62), controlPoint1: CGPointMake(frame.minX + 62.85, frame.minY + 76.07), controlPoint2: CGPointMake(frame.minX + 74.2, frame.minY + 66.33))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 160.71, frame.minY + 115.32), controlPoint1: CGPointMake(frame.minX + 144.85, frame.minY + 49.12), controlPoint2: CGPointMake(frame.minX + 157.21, frame.minY + 115.32))
        ovalPath.addCurveToPoint(CGPointMake(frame.minX + 226, frame.minY + 62), controlPoint1: CGPointMake(frame.minX + 164.06, frame.minY + 115.32), controlPoint2: CGPointMake(frame.minX + 180.76, frame.minY + 64.08))
        ovalPath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
        UIColor.whiteColor().setFill()
        ovalPath.fill()
        CGContextRestoreGState(context)

        UIColor.lightGrayColor().setStroke()
        ovalPath.lineWidth = 0.5
        ovalPath.stroke()


        if (imageVisible) {
            //// ImageOval Drawing
            let imageOvalRect = CGRectMake(frame.minX + 35.25, frame.minY + 60.33, 250, 250)
            let imageOvalPath = UIBezierPath()
            imageOvalPath.moveToPoint(CGPointMake(frame.minX + 226, frame.minY + 61.99))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 273.25, frame.minY + 91.91), controlPoint1: CGPointMake(frame.minX + 247.53, frame.minY + 61), controlPoint2: CGPointMake(frame.minX + 263.53, frame.minY + 70.59))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 276.19, frame.minY + 190.65), controlPoint1: CGPointMake(frame.minX + 290.87, frame.minY + 130.55), controlPoint2: CGPointMake(frame.minX + 286.64, frame.minY + 171.36))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 160.71, frame.minY + 310.33), controlPoint1: CGPointMake(frame.minX + 247.88, frame.minY + 242.95), controlPoint2: CGPointMake(frame.minX + 180.28, frame.minY + 310.33))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 43.28, frame.minY + 190.65), controlPoint1: CGPointMake(frame.minX + 141.14, frame.minY + 310.33), controlPoint2: CGPointMake(frame.minX + 63.79, frame.minY + 241.96))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 53.06, frame.minY + 91.91), controlPoint1: CGPointMake(frame.minX + 35.02, frame.minY + 169.99), controlPoint2: CGPointMake(frame.minX + 26.89, frame.minY + 134.31))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 92, frame.minY + 61.99), controlPoint1: CGPointMake(frame.minX + 62.85, frame.minY + 76.06), controlPoint2: CGPointMake(frame.minX + 74.2, frame.minY + 66.33))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 160.71, frame.minY + 115.32), controlPoint1: CGPointMake(frame.minX + 144.85, frame.minY + 49.11), controlPoint2: CGPointMake(frame.minX + 157.21, frame.minY + 115.32))
            imageOvalPath.addCurveToPoint(CGPointMake(frame.minX + 226, frame.minY + 61.99), controlPoint1: CGPointMake(frame.minX + 164.06, frame.minY + 115.32), controlPoint2: CGPointMake(frame.minX + 180.76, frame.minY + 64.07))
            imageOvalPath.closePath()
            CGContextSaveGState(context)
            CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
            CGContextBeginTransparencyLayer(context, nil)
            CGContextSaveGState(context)
            imageOvalPath.addClip()
            image.drawInRect(CGRectMake(floor(imageOvalRect.minX + 0.5), floor(imageOvalRect.minY - 0.67 + 0.5), image.size.width, image.size.height))
            CGContextRestoreGState(context)
            CGContextEndTransparencyLayer(context)
            CGContextRestoreGState(context)

        }


        //// Separator Drawing
        let separatorPath = UIBezierPath()
        separatorPath.moveToPoint(CGPointMake(frame.minX + 160.5, frame.minY + 115))
        separatorPath.addCurveToPoint(CGPointMake(frame.minX + 166.75, frame.minY + 136.28), controlPoint1: CGPointMake(frame.minX + 160.5, frame.minY + 115), controlPoint2: CGPointMake(frame.minX + 166.84, frame.minY + 123.68))
        separatorPath.addCurveToPoint(CGPointMake(frame.minX + 159.25, frame.minY + 199.28), controlPoint1: CGPointMake(frame.minX + 166.62, frame.minY + 153.36), controlPoint2: CGPointMake(frame.minX + 158.84, frame.minY + 178.06))
        separatorPath.addCurveToPoint(CGPointMake(frame.minX + 148.5, frame.minY + 260.03), controlPoint1: CGPointMake(frame.minX + 160.25, frame.minY + 251.28), controlPoint2: CGPointMake(frame.minX + 148.5, frame.minY + 244.31))
        separatorPath.addCurveToPoint(CGPointMake(frame.minX + 160.5, frame.minY + 310), controlPoint1: CGPointMake(frame.minX + 148.5, frame.minY + 290.35), controlPoint2: CGPointMake(frame.minX + 160.5, frame.minY + 310))
        UIColor.darkGrayColor().setStroke()
        separatorPath.lineWidth = 1
        separatorPath.stroke()


        //// LeftHolderGroup
        //// LeftHole Drawing
        let leftHolePath = UIBezierPath(ovalInRect: CGRectMake(frame.minX + 72.25, frame.minY + 82.75, 30, 30))
        UIColor.darkGrayColor().setFill()
        leftHolePath.fill()


        //// LeftBrace Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, frame.minX + 37, frame.minY + 63)
        CGContextRotateCTM(context, -20 * CGFloat(M_PI) / 180)

        let leftBracePath = UIBezierPath()
        leftBracePath.moveToPoint(CGPointMake(14.51, 47.85))
        leftBracePath.addCurveToPoint(CGPointMake(32.77, 69.83), controlPoint1: CGPointMake(15.59, 65.51), controlPoint2: CGPointMake(20.27, 69.83))
        leftBracePath.addCurveToPoint(CGPointMake(55.38, 49.83), controlPoint1: CGPointMake(45.27, 69.83), controlPoint2: CGPointMake(56.15, 68.2))
        leftBracePath.addCurveToPoint(CGPointMake(22, 0.86), controlPoint1: CGPointMake(54.62, 31.46), controlPoint2: CGPointMake(22, 0.86))
        leftBracePath.addLineToPoint(CGPointMake(-0, 0))
        leftBracePath.addCurveToPoint(CGPointMake(14.51, 47.85), controlPoint1: CGPointMake(-0, 0), controlPoint2: CGPointMake(13.43, 30.19))
        leftBracePath.closePath()
        color3.setFill()
        leftBracePath.fill()
        UIColor.lightGrayColor().setStroke()
        leftBracePath.lineWidth = 0.5
        leftBracePath.stroke()

        CGContextRestoreGState(context)


        //// LeftKeyCircle Drawing
        let leftKeyCirclePath = UIBezierPath()
        leftKeyCirclePath.moveToPoint(CGPointMake(frame.minX + 42, frame.minY + 11))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 24.57, frame.minY + 16.58), controlPoint1: CGPointMake(frame.minX + 35.5, frame.minY + 11), controlPoint2: CGPointMake(frame.minX + 29.48, frame.minY + 13.07))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 12, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 16.96, frame.minY + 22.02), controlPoint2: CGPointMake(frame.minX + 12, frame.minY + 30.93))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 42, frame.minY + 71), controlPoint1: CGPointMake(frame.minX + 12, frame.minY + 57.57), controlPoint2: CGPointMake(frame.minX + 25.43, frame.minY + 71))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 72, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 58.57, frame.minY + 71), controlPoint2: CGPointMake(frame.minX + 72, frame.minY + 57.57))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 42, frame.minY + 11), controlPoint1: CGPointMake(frame.minX + 72, frame.minY + 24.43), controlPoint2: CGPointMake(frame.minX + 58.57, frame.minY + 11))
        leftKeyCirclePath.closePath()
        leftKeyCirclePath.moveToPoint(CGPointMake(frame.minX + 77, frame.minY + 41))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 42, frame.minY + 76), controlPoint1: CGPointMake(frame.minX + 77, frame.minY + 60.33), controlPoint2: CGPointMake(frame.minX + 61.33, frame.minY + 76))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 7, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 22.67, frame.minY + 76), controlPoint2: CGPointMake(frame.minX + 7, frame.minY + 60.33))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 20.65, frame.minY + 13.27), controlPoint1: CGPointMake(frame.minX + 7, frame.minY + 29.71), controlPoint2: CGPointMake(frame.minX + 12.35, frame.minY + 19.67))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 42, frame.minY + 6), controlPoint1: CGPointMake(frame.minX + 26.56, frame.minY + 8.71), controlPoint2: CGPointMake(frame.minX + 33.96, frame.minY + 6))
        leftKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 77, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 61.33, frame.minY + 6), controlPoint2: CGPointMake(frame.minX + 77, frame.minY + 21.67))
        leftKeyCirclePath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, outerShadow.shadowOffset, outerShadow.shadowBlurRadius, (outerShadow.shadowColor as! UIColor).CGColor)
        color2.setFill()
        leftKeyCirclePath.fill()
        CGContextRestoreGState(context)

        UIColor.grayColor().setStroke()
        leftKeyCirclePath.lineWidth = 0.5
        leftKeyCirclePath.stroke()




        //// RightHolderGroup
        //// RightHole Drawing
        let rightHolePath = UIBezierPath(ovalInRect: CGRectMake(frame.minX + 221.25, frame.minY + 78, 30, 30))
        UIColor.darkGrayColor().setFill()
        rightHolePath.fill()


        //// RightBrace Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, frame.minX + 261.91, frame.minY + 39.28)
        CGContextRotateCTM(context, 62 * CGFloat(M_PI) / 180)

        let rightBracePath = UIBezierPath()
        rightBracePath.moveToPoint(CGPointMake(14.51, 47.85))
        rightBracePath.addCurveToPoint(CGPointMake(32.77, 69.83), controlPoint1: CGPointMake(15.59, 65.51), controlPoint2: CGPointMake(20.27, 69.83))
        rightBracePath.addCurveToPoint(CGPointMake(55.38, 49.83), controlPoint1: CGPointMake(45.27, 69.83), controlPoint2: CGPointMake(56.15, 68.2))
        rightBracePath.addCurveToPoint(CGPointMake(18.96, -10.7), controlPoint1: CGPointMake(54.62, 31.46), controlPoint2: CGPointMake(18.96, -10.7))
        rightBracePath.addLineToPoint(CGPointMake(-0, 0))
        rightBracePath.addCurveToPoint(CGPointMake(14.51, 47.85), controlPoint1: CGPointMake(-0, 0), controlPoint2: CGPointMake(13.43, 30.19))
        rightBracePath.closePath()
        color3.setFill()
        rightBracePath.fill()
        UIColor.lightGrayColor().setStroke()
        rightBracePath.lineWidth = 0.5
        rightBracePath.stroke()

        CGContextRestoreGState(context)


        //// RightKeyCircle Drawing
        let rightKeyCirclePath = UIBezierPath()
        rightKeyCirclePath.moveToPoint(CGPointMake(frame.minX + 280.25, frame.minY + 11))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 262.82, frame.minY + 16.58), controlPoint1: CGPointMake(frame.minX + 273.75, frame.minY + 11), controlPoint2: CGPointMake(frame.minX + 267.73, frame.minY + 13.07))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 250.25, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 255.21, frame.minY + 22.02), controlPoint2: CGPointMake(frame.minX + 250.25, frame.minY + 30.93))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 280.25, frame.minY + 71), controlPoint1: CGPointMake(frame.minX + 250.25, frame.minY + 57.57), controlPoint2: CGPointMake(frame.minX + 263.68, frame.minY + 71))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 310.25, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 296.82, frame.minY + 71), controlPoint2: CGPointMake(frame.minX + 310.25, frame.minY + 57.57))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 280.25, frame.minY + 11), controlPoint1: CGPointMake(frame.minX + 310.25, frame.minY + 24.43), controlPoint2: CGPointMake(frame.minX + 296.82, frame.minY + 11))
        rightKeyCirclePath.closePath()
        rightKeyCirclePath.moveToPoint(CGPointMake(frame.minX + 315.25, frame.minY + 41))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 280.25, frame.minY + 76), controlPoint1: CGPointMake(frame.minX + 315.25, frame.minY + 60.33), controlPoint2: CGPointMake(frame.minX + 299.58, frame.minY + 76))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 245.25, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 260.92, frame.minY + 76), controlPoint2: CGPointMake(frame.minX + 245.25, frame.minY + 60.33))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 258.9, frame.minY + 13.27), controlPoint1: CGPointMake(frame.minX + 245.25, frame.minY + 29.71), controlPoint2: CGPointMake(frame.minX + 250.6, frame.minY + 19.67))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 280.25, frame.minY + 6), controlPoint1: CGPointMake(frame.minX + 264.81, frame.minY + 8.71), controlPoint2: CGPointMake(frame.minX + 272.21, frame.minY + 6))
        rightKeyCirclePath.addCurveToPoint(CGPointMake(frame.minX + 315.25, frame.minY + 41), controlPoint1: CGPointMake(frame.minX + 299.58, frame.minY + 6), controlPoint2: CGPointMake(frame.minX + 315.25, frame.minY + 21.67))
        rightKeyCirclePath.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, outerShadow.shadowOffset, outerShadow.shadowBlurRadius, (outerShadow.shadowColor as! UIColor).CGColor)
        color2.setFill()
        rightKeyCirclePath.fill()
        CGContextRestoreGState(context)

        UIColor.grayColor().setStroke()
        rightKeyCirclePath.lineWidth = 0.5
        rightKeyCirclePath.stroke()
    }

    //// Generated Images

    public class func imageOfKeyRing(frame frame: CGRect = CGRectMake(0, 0, 320, 320), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            HeartKeyRing.drawKeyRing(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), image: image, imageVisible: imageVisible)

        let imageOfKeyRing = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfKeyRing
    }

}
