//
//  Cup.swift
//  Blagaprint
//
//  Created by Ivan Magda on 16.12.15.
//  Copyright (c) 2015 Blagaprint. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class Cup : NSObject {

    //// Drawing Methods

    public class func drawCupLeft(frame frame: CGRect = CGRectMake(10, 15, 320, 320), pickedImage: UIImage = UIImage(named: "pickedImage.png")!, imageVisible: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Image Declarations
        let cupLeftImage = UIImage(named: "cupLeftImage.jpg")!

        //// Rectangle Drawing
        let rectangleRect = CGRectMake(frame.minX, frame.minY, 320, 320)
        let rectanglePath = UIBezierPath(rect: rectangleRect)
        CGContextSaveGState(context)
        rectanglePath.addClip()
        cupLeftImage.drawInRect(CGRectMake(floor(rectangleRect.minX + 0.5), floor(rectangleRect.minY + 0.5), cupLeftImage.size.width, cupLeftImage.size.height))
        CGContextRestoreGState(context)


        if (imageVisible) {
            //// PickedImageRect Drawing
            let pickedImageRectRect = CGRectMake(frame.minX + 110.5, frame.minY + 35, 185, 225)
            let pickedImageRectPath = UIBezierPath()
            pickedImageRectPath.moveToPoint(CGPointMake(frame.minX + 110.5, frame.minY + 260))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 289.3, frame.minY + 260), controlPoint1: CGPointMake(frame.minX + 110.5, frame.minY + 260), controlPoint2: CGPointMake(frame.minX + 286.32, frame.minY + 260))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 291.28, frame.minY + 257), controlPoint1: CGPointMake(frame.minX + 289.5, frame.minY + 260), controlPoint2: CGPointMake(frame.minX + 291.07, frame.minY + 258.89))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 294.77, frame.minY + 145), controlPoint1: CGPointMake(frame.minX + 292.69, frame.minY + 244.61), controlPoint2: CGPointMake(frame.minX + 293.93, frame.minY + 194.41))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 294.26, frame.minY + 37), controlPoint1: CGPointMake(frame.minX + 295.61, frame.minY + 95.71), controlPoint2: CGPointMake(frame.minX + 296.05, frame.minY + 47.22))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 292.28, frame.minY + 35), controlPoint1: CGPointMake(frame.minX + 294.04, frame.minY + 35.72), controlPoint2: CGPointMake(frame.minX + 292.55, frame.minY + 35))
            pickedImageRectPath.addCurveToPoint(CGPointMake(frame.minX + 110.5, frame.minY + 35), controlPoint1: CGPointMake(frame.minX + 287.31, frame.minY + 35), controlPoint2: CGPointMake(frame.minX + 110.5, frame.minY + 35))
            pickedImageRectPath.addLineToPoint(CGPointMake(frame.minX + 110.5, frame.minY + 260))
            pickedImageRectPath.closePath()
            CGContextSaveGState(context)
            pickedImageRectPath.addClip()
            pickedImage.drawInRect(CGRectMake(floor(pickedImageRectRect.minX + 0.5), floor(pickedImageRectRect.minY + 0.5), pickedImage.size.width, pickedImage.size.height))
            CGContextRestoreGState(context)
        }
    }

    public class func drawCupRight(frame frame: CGRect = CGRectMake(10, 15, 320, 320), pickedImage: UIImage = UIImage(named: "pickedImage.png")!, imageVisible: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Image Declarations
        let cupRightImage = UIImage(named: "cupRightImage.jpg")!

        //// Rectangle Drawing
        let rectangleRect = CGRectMake(frame.minX, frame.minY, 320, 320)
        let rectanglePath = UIBezierPath(rect: rectangleRect)
        CGContextSaveGState(context)
        rectanglePath.addClip()
        cupRightImage.drawInRect(CGRectMake(floor(rectangleRect.minX + 0.5), floor(rectangleRect.minY + 0.5), cupRightImage.size.width, cupRightImage.size.height))
        CGContextRestoreGState(context)


        if (imageVisible) {
            //// PickedImageRectangle Drawing
            let pickedImageRectangleRect = CGRectMake(frame.minX + 24.45, frame.minY + 35, 185, 225)
            let pickedImageRectanglePath = UIBezierPath()
            pickedImageRectanglePath.moveToPoint(CGPointMake(frame.minX + 25.62, frame.minY + 147.34))
            pickedImageRectanglePath.addCurveToPoint(CGPointMake(frame.minX + 30, frame.minY + 260), controlPoint1: CGPointMake(frame.minX + 26, frame.minY + 203.64), controlPoint2: CGPointMake(frame.minX + 26, frame.minY + 260))
            pickedImageRectanglePath.addCurveToPoint(CGPointMake(frame.minX + 209.45, frame.minY + 260), controlPoint1: CGPointMake(frame.minX + 38, frame.minY + 260), controlPoint2: CGPointMake(frame.minX + 209.45, frame.minY + 260))
            pickedImageRectanglePath.addLineToPoint(CGPointMake(frame.minX + 209.45, frame.minY + 35))
            pickedImageRectanglePath.addCurveToPoint(CGPointMake(frame.minX + 27, frame.minY + 35), controlPoint1: CGPointMake(frame.minX + 209.45, frame.minY + 35), controlPoint2: CGPointMake(frame.minX + 36, frame.minY + 35))
            pickedImageRectanglePath.addCurveToPoint(CGPointMake(frame.minX + 25.62, frame.minY + 147.34), controlPoint1: CGPointMake(frame.minX + 22.5, frame.minY + 35), controlPoint2: CGPointMake(frame.minX + 25.25, frame.minY + 91.14))
            pickedImageRectanglePath.closePath()
            CGContextSaveGState(context)
            pickedImageRectanglePath.addClip()
            pickedImage.drawInRect(CGRectMake(floor(pickedImageRectangleRect.minX + 0.5), floor(pickedImageRectangleRect.minY + 0.5), pickedImage.size.width, pickedImage.size.height))
            CGContextRestoreGState(context)
        }
    }

    //// Generated Images

    public class func imageOfCupLeft(frame frame: CGRect = CGRectMake(10, 15, 320, 320), pickedImage: UIImage = UIImage(named: "pickedImage.png")!, imageVisible: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Cup.drawCupLeft(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), pickedImage: pickedImage, imageVisible: imageVisible)

        let imageOfCupLeft = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfCupLeft
    }

    public class func imageOfCupRight(frame frame: CGRect = CGRectMake(10, 15, 320, 320), pickedImage: UIImage = UIImage(named: "pickedImage.png")!, imageVisible: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Cup.drawCupRight(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), pickedImage: pickedImage, imageVisible: imageVisible)

        let imageOfCupRight = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfCupRight
    }

}
