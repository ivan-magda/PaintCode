//
//  BusinessCard.swift
//  Blagaprint
//
//  Created by Ivan Magda on 12.02.16.
//  Copyright (c) 2016 Blagaprint. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class BusinessCard : NSObject {

    //// Drawing Methods

    public class func drawBusinessCardCanvas(frame frame: CGRect = CGRectMake(0, 0, 320, 180), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.grayColor()
        shadow.shadowOffset = CGSizeMake(3.1, 3.1)
        shadow.shadowBlurRadius = 5

        //// BusinessCardGroup
        //// BusinessCardRectangle Drawing
        let businessCardRectanglePath = UIBezierPath(rect: CGRectMake(frame.minX + 10, frame.minY + 10, 300, 160))
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
        UIColor.whiteColor().setFill()
        businessCardRectanglePath.fill()
        CGContextRestoreGState(context)

        UIColor.grayColor().setStroke()
        businessCardRectanglePath.lineWidth = 0.5
        businessCardRectanglePath.stroke()


        //// Text Drawing
        let textRect = CGRectMake(frame.minX + 40, frame.minY + 50, 240, 80)
        let textTextContent = NSString(string: "Ваш дизайн")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = .Center

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "Menlo-Bold", size: 37)!, NSForegroundColorAttributeName: UIColor.blackColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)


        if (imageVisible) {
            //// FillImageRectangle Drawing
            let fillImageRectangleRect = CGRectMake(frame.minX + 10, frame.minY + 10, 300, 160)
            let fillImageRectanglePath = UIBezierPath(rect: fillImageRectangleRect)
            CGContextSaveGState(context)
            CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
            CGContextBeginTransparencyLayer(context, nil)
            CGContextSaveGState(context)
            fillImageRectanglePath.addClip()
            image.drawInRect(CGRectMake(floor(fillImageRectangleRect.minX + 0.5), floor(fillImageRectangleRect.minY + 0.5), image.size.width, image.size.height))
            CGContextRestoreGState(context)
            CGContextEndTransparencyLayer(context)
            CGContextRestoreGState(context)

            UIColor.lightGrayColor().setStroke()
            fillImageRectanglePath.lineWidth = 0.5
            fillImageRectanglePath.stroke()
        }
    }

    //// Generated Images

    public class func imageOfBusinessCardCanvas(frame frame: CGRect = CGRectMake(0, 0, 320, 180), image: UIImage = UIImage(named: "image.png")!, imageVisible: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            BusinessCard.drawBusinessCardCanvas(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), image: image, imageVisible: imageVisible)

        let imageOfBusinessCardCanvas = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfBusinessCardCanvas
    }

}
